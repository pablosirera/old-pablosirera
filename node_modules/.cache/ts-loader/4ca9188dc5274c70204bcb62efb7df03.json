{"remainingRequest":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/babel-loader/lib/index.js!/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/ts-loader/index.js??ref--14-2!/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/eslint-loader/index.js??ref--13-0!/Users/pablo/ProyectosDev/pablosirera.github.io/src/store/modules/language/actions.ts","dependencies":[{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/src/store/modules/language/actions.ts","mtime":1529855075089},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/.babelrc","mtime":1524901209153},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1529268908089},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/ts-loader/index.js","mtime":1528433923000},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.promise\";\nimport languageMutationsTypes from './mutationTypes';\nimport { setLanguage, setLanguageAndLocale, loadLanguageFile } from '@/langs/utils';\n\nfunction loadDefaultLanguage(_ref) {\n  var dispatch = _ref.dispatch;\n  var currentLanguage = window.navigator.language.split('-')[0];\n  dispatch('changeLanguage', currentLanguage);\n}\n\nexport function changeLanguage(_x, _x2) {\n  return _changeLanguage.apply(this, arguments);\n}\n\nfunction _changeLanguage() {\n  _changeLanguage = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(_ref2, language) {\n    var commit, state, locale;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            commit = _ref2.commit, state = _ref2.state;\n\n            if (!state.loadedLanguages.includes(language)) {\n              _context.next = 5;\n              break;\n            }\n\n            setLanguage(language);\n            commit(languageMutationsTypes.LANGUAGE.SET, {\n              language: language\n            });\n            return _context.abrupt(\"return\");\n\n          case 5:\n            _context.next = 7;\n            return loadLanguageFile(language);\n\n          case 7:\n            locale = _context.sent;\n            setLanguageAndLocale(language, locale);\n            commit(languageMutationsTypes.LANGUAGE.FETCH.SUCCESS, {\n              language: language\n            });\n            commit(languageMutationsTypes.LANGUAGE.SET, {\n              language: language\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _changeLanguage.apply(this, arguments);\n}\n\nexport var actions = {\n  loadDefaultLanguage: loadDefaultLanguage,\n  changeLanguage: changeLanguage\n};",{"version":3,"sources":["/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/eslint-loader/index.js??ref--13-0!/Users/pablo/ProyectosDev/pablosirera.github.io/src/store/modules/language/actions.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,sBAAP,MAAmC,iBAAnC;AAEA,SAAS,WAAT,EAAsB,oBAAtB,EAA4C,gBAA5C,QAAoE,eAApE;;AAEA,SAAA,mBAAA,OAAoE;AAAA,MAArC,QAAqC,QAArC,QAAqC;AAClE,MAAM,kBAAkB,OAAO,SAAP,CAAiB,QAAjB,CAA0B,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAxB;AACA,WAAS,gBAAT,EAA2B,eAA3B;AACD;;AAED,gBAAY,cAAZ;AAAA;AAAA;;;;;0BAAO,wBAEL,QAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,kBADG,SACH,MADG,EACK,KADL,SACK,KADL;;AAAA,iBAID,MAAM,eAAN,CAAsB,QAAtB,CAA+B,QAA/B,CAJC;AAAA;AAAA;AAAA;;AAKH,wBAAY,QAAZ;AACA,mBAAO,uBAAuB,QAAvB,CAAgC,GAAvC,EAA4C;AAAE;AAAF,aAA5C;AANG;;AAAA;AAAA;AAAA,mBAUgB,iBAAiB,QAAjB,CAVhB;;AAAA;AAUC,kBAVD;AAWL,iCAAqB,QAArB,EAA+B,MAA/B;AACA,mBAAO,uBAAuB,QAAvB,CAAgC,KAAhC,CAAsC,OAA7C,EAAsD;AAAE;AAAF,aAAtD;AACA,mBAAO,uBAAuB,QAAvB,CAAgC,GAAvC,EAA4C;AAAE;AAAF,aAA5C;;AAbK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBP,OAAO,IAAM,UAAkC;AAC7C,0CAD6C;AAE7C;AAF6C,CAAxC","sourcesContent":["import { ActionTree, ActionContext } from 'vuex'\nimport languageMutationsTypes from './mutationTypes'\nimport { State } from './state'\nimport { setLanguage, setLanguageAndLocale, loadLanguageFile } from '@/langs/utils'\n\nfunction loadDefaultLanguage({ dispatch }: ActionContext<State, any>) {\n  const currentLanguage = window.navigator.language.split('-')[0]\n  dispatch('changeLanguage', currentLanguage)\n}\n\nexport async function changeLanguage(\n  { commit, state }: ActionContext<State, any>,\n  language: string\n) {\n  if (state.loadedLanguages.includes(language)) {\n    setLanguage(language)\n    commit(languageMutationsTypes.LANGUAGE.SET, { language })\n    return\n  }\n\n  const locale = await loadLanguageFile(language);\n  setLanguageAndLocale(language, locale)\n  commit(languageMutationsTypes.LANGUAGE.FETCH.SUCCESS, { language })\n  commit(languageMutationsTypes.LANGUAGE.SET, { language })\n}\n\nexport const actions: ActionTree<State, any> = {\n  loadDefaultLanguage,\n  changeLanguage\n}\n"],"sourceRoot":""}]}