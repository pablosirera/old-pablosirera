{"remainingRequest":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/babel-loader/lib/index.js!/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/ts-loader/index.js??ref--14-2!/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/eslint-loader/index.js??ref--13-0!/Users/pablo/ProyectosDev/pablosirera.github.io/src/langs/utils.ts","dependencies":[{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/src/langs/utils.ts","mtime":1525291317166},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/.babelrc","mtime":1524901209153},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1529268908089},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/babel-loader/lib/index.js","mtime":1526583314000},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/ts-loader/index.js","mtime":1528433923000},{"path":"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/eslint-loader/index.js","mtime":1519638534000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator\";\nimport { i18n } from './i18n';\nimport axios from 'axios';\nexport function setLanguage(language) {\n  i18n.locale = language;\n  axios.interceptors.request.use(function (config) {\n    config.headers.common['Accept-Language'] = language;\n    return config;\n  });\n  var html = document.querySelector('html');\n\n  if (html != null) {\n    html.setAttribute('lang', language);\n  }\n}\nexport function setLanguageAndLocale(language, locale) {\n  setLanguage(language);\n  i18n.setLocaleMessage(language, locale);\n}\nexport function loadLanguageFile() {\n  return _loadLanguageFile.apply(this, arguments);\n}\n\nfunction _loadLanguageFile() {\n  _loadLanguageFile = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var language,\n        _args = arguments;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            language = _args.length > 0 && _args[0] !== undefined ? _args[0] : 'en';\n            _context.next = 3;\n            return loadLanguageDomains(language);\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _loadLanguageFile.apply(this, arguments);\n}\n\nfunction loadLanguageDomains(_x) {\n  return _loadLanguageDomains.apply(this, arguments);\n}\n\nfunction _loadLanguageDomains() {\n  _loadLanguageDomains = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(language) {\n    var locale;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return import(\"./../langs/locales/\".concat(language, \".json\"));\n\n          case 2:\n            locale = _context2.sent;\n            return _context2.abrupt(\"return\", locale);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _loadLanguageDomains.apply(this, arguments);\n}",{"version":3,"sources":["/Users/pablo/ProyectosDev/pablosirera.github.io/node_modules/eslint-loader/index.js??ref--13-0!/Users/pablo/ProyectosDev/pablosirera.github.io/src/langs/utils.ts"],"names":[],"mappings":";;AACA,SAAS,IAAT,QAAqB,QAArB;AACA,OAAO,KAAP,MAAkB,OAAlB;AAGA,OAAM,SAAA,WAAA,CAAsB,QAAtB,EAAsC;AAC1C,OAAK,MAAL,GAAc,QAAd;AAEA,QAAM,YAAN,CAAmB,OAAnB,CAA2B,GAA3B,CAA+B,kBAAS;AACtC,WAAO,OAAP,CAAe,MAAf,CAAsB,iBAAtB,IAA2C,QAA3C;AACA,WAAO,MAAP;AACD,GAHD;AAIA,MAAM,OAAO,SAAS,aAAT,CAAuB,MAAvB,CAAb;;AACA,MAAI,QAAQ,IAAZ,EAAkB;AAChB,SAAK,YAAL,CAAkB,MAAlB,EAA0B,QAA1B;AACD;AACF;AAED,OAAM,SAAA,oBAAA,CAA+B,QAA/B,EAAiD,MAAjD,EAAoF;AACxF,cAAY,QAAZ;AACA,OAAK,gBAAL,CAAsB,QAAtB,EAAgC,MAAhC;AACD;AAED,gBAAY,gBAAZ;AAAA;AAAA;;;;;0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC,oBAAhC,2DAAmD,IAAnD;AAAA;AAAA,mBACQ,oBAAoB,QAApB,CADR;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAIF,mB;;;;;;;0BAAL,kBAAmC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACuB,oCAA6B,QAA7B,WADvB;;AAAA;AACQ,kBADR;AAAA,8CAES,MAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import Vue from 'vue'\nimport { i18n } from './i18n'\nimport axios from 'axios'\nimport VueI18n from 'vue-i18n'\n\nexport function setLanguage(language: string) {\n  i18n.locale = language\n\n  axios.interceptors.request.use(config => {\n    config.headers.common['Accept-Language'] = language\n    return config\n  })\n  const html = document.querySelector('html')\n  if (html != null) {\n    html.setAttribute('lang', language)\n  }\n}\n\nexport function setLanguageAndLocale(language: string, locale: VueI18n.LocaleMessageObject) {\n  setLanguage(language)\n  i18n.setLocaleMessage(language, locale)\n}\n\nexport async function loadLanguageFile(language: string = 'en') {\n  return await loadLanguageDomains(language)\n}\n\nasync function loadLanguageDomains(language: string) {\n  const locale = await import(`./../langs/locales/${language}.json`)\n  return locale\n}\n"],"sourceRoot":""}]}